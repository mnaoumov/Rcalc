
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i486-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(warn=2, error=quote(dump.frames("bd-acc-with-all-distr", TRUE)))
> 
> source("PowerFunctions-fixed.R")
Loading required package: miscTools
> 
> rexp2 = function(N) {
+   rexp(N) ^ 2
+ }
> 
> rgamma5 = function(N) {
+   rgamma(N, 5)
+ }
> 
> rgamma05 = function(N) {
+   rgamma(N, 0.5)
+ }
>  
> 
> 
> u = (7 : 14) / 10
> M = 30
> 
> b = 5
> k = 3
> 
> #accuracy exp
> A = generateRandomMatrix(rexp, b, k)
> 
> Fstat = NULL
> Lstat = NULL
> Qstat = NULL
>  
>   for (i in 1 : iterations) {
+     B = t(apply(A, 1, sample, size = k))
+    xx = apply(B, 2, mean)
+ SST = b * sum(xx ^ 2) 
+ SSE = sum((B-matrix(xx,b,k,byrow=TRUE))^2)
+ Fstat = c(Fstat, (SST/ (k - 1)) / (SSE / ((k - 1) * (b - 1)) ))
+ Lstat = c(Lstat, Lambda(A, xx[-k])$max)
+ Qstat = c(Qstat,SST)
+    }
Error: object 'iterations' not found
>  
> L = apply(outer(Lstat, u ^ 2 / 2, ">"), 2, mean)
> FMC = apply(outer(Fstat, b * u ^ 2, ">"), 2, mean)
> QMC = apply(outer(Qstat, b * u ^ 2, ">"), 2, mean)
> Q = 1 - pchisq(b * u ^ 2, k - 1)
> F = 1 - pf(b * u ^ 2 , k-1, (k-1) * (b-1))
>  
> tplr = NULL
> tpnc = NULL
>   
> for (up in u) {
+   tt = TailDistrMonteCarlo(A, up, M)
+  tplr = c(tplr, tt$LR)
+  tpnc = c(tpnc, tt$NC)
+  }
> 
> rbind(FMC, F=round(F,4), QMC, Q=round(Q,4), L , LR=round(tplr,4), NC=round(tpnc,4))
      [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]
FMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN
F   0.1479 0.0953 0.0610 0.0390 0.0251 0.0163 0.0107 0.0071
QMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN
Q   0.2938 0.2019 0.1320 0.0821 0.0486 0.0273 0.0146 0.0074
L      NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN
LR  0.4834 0.3328 0.2709 0.1818 0.1123 0.0810 0.0554 0.0190
NC  0.4596 0.3201 0.2541 0.1707 0.1059 0.0746 0.0499 0.0182
>  
> 
> b = 10
> k = 4
> 
> #accuracy normal
> A = generateRandomMatrix(rnorm, b, k)
> 
> Fstat = NULL
> Lstat = NULL
> Qstat = NULL
>  
>   for (i in 1 : iterations) {
+     B = t(apply(A, 1, sample, size = k))
+    xx = apply(B, 2, mean)
+ SST = b * sum(xx ^ 2) 
+ SSE = sum((B-matrix(xx,b,k,byrow=TRUE))^2)
+ Fstat = c(Fstat, (SST/ (k - 1)) / (SSE / ((k - 1) * (b - 1)) ))
+ Lstat = c(Lstat, Lambda(A, xx[-k])$max)
+ Qstat = c(Qstat,SST)
+    }
Error: object 'iterations' not found
>  
> L = apply(outer(Lstat, u ^ 2 / 2, ">"), 2, mean)
> FMC = apply(outer(Fstat, b * u ^ 2, ">"), 2, mean)
> QMC = apply(outer(Qstat, b * u ^ 2, ">"), 2, mean)
> Q = 1 - pchisq(b * u ^ 2, k - 1)
> F = 1 - pf(b * u ^ 2 , k-1, (k-1) * (b-1))
>  
> tplr = NULL
> tpnc = NULL
>   
> for (up in u) {
+   tt = TailDistrMonteCarlo(A, up, M)
+  tplr = c(tplr, tt$LR)
+  tpnc = c(tpnc, tt$NC)
+  }
> 
> rbind(FMC, F=round(F,4), QMC, Q=round(Q,4), L , LR=round(tplr,4), NC=round(tpnc,4))
      [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]  [,8]
FMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
F   0.0076 0.0020 0.0005 0.0001 0.0000 0.0000 0.0000 0e+00
QMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
Q   0.1793 0.0937 0.0440 0.0186 0.0070 0.0024 0.0007 2e-04
L      NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
LR  0.2068 0.1139 0.0562 0.0260 0.0107 0.0040 0.0015 5e-04
NC  0.2058 0.1132 0.0558 0.0257 0.0106 0.0040 0.0014 5e-04
>  
> 
> #accuarcy unif
> A = generateRandomMatrix(runif, b, k)
> 
> Fstat = NULL
> Lstat = NULL
> Qstat = NULL
>  
>   for (i in 1 : iterations) {
+     B = t(apply(A, 1, sample, size = k))
+    xx = apply(B, 2, mean)
+ SST = b * sum(xx ^ 2) 
+ SSE = sum((B-matrix(xx,b,k,byrow=TRUE))^2)
+ Fstat = c(Fstat, (SST/ (k - 1)) / (SSE / ((k - 1) * (b - 1)) ))
+ Lstat = c(Lstat, Lambda(A, xx[-k])$max)
+ Qstat = c(Qstat,SST)
+    }
Error: object 'iterations' not found
>  
> L = apply(outer(Lstat, u ^ 2 / 2, ">"), 2, mean)
> FMC = apply(outer(Fstat, b * u ^ 2, ">"), 2, mean)
> QMC = apply(outer(Qstat, b * u ^ 2, ">"), 2, mean)
> Q = 1 - pchisq(b * u ^ 2, k - 1)
> F = 1 - pf(b * u ^ 2 , k-1, (k-1) * (b-1))
>  
> tplr = NULL
> tpnc = NULL
>   
> for (up in u) {
+   tt = TailDistrMonteCarlo(A, up, M)
+  tplr = c(tplr, tt$LR)
+  tpnc = c(tpnc, tt$NC)
+  }
> 
> rbind(FMC, F=round(F,4), QMC, Q=round(Q,4), L , LR=round(tplr,4), NC=round(tpnc,4))
      [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]  [,8]
FMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
F   0.0076 0.0020 0.0005 0.0001 0.0000 0.0000 0.0000 0e+00
QMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
Q   0.1793 0.0937 0.0440 0.0186 0.0070 0.0024 0.0007 2e-04
L      NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
LR  0.2063 0.1148 0.0582 0.0258 0.0111 0.0041 0.0014 5e-04
NC  0.2054 0.1140 0.0576 0.0255 0.0110 0.0040 0.0014 5e-04
>  
> 
> #accuarcy exp
> A = generateRandomMatrix(rexp, b, k)
> 
> Fstat = NULL
> Lstat = NULL
> Qstat = NULL
>  
>   for (i in 1 : iterations) {
+     B = t(apply(A, 1, sample, size = k))
+    xx = apply(B, 2, mean)
+ SST = b * sum(xx ^ 2) 
+ SSE = sum((B-matrix(xx,b,k,byrow=TRUE))^2)
+ Fstat = c(Fstat, (SST/ (k - 1)) / (SSE / ((k - 1) * (b - 1)) ))
+ Lstat = c(Lstat, Lambda(A, xx[-k])$max)
+ Qstat = c(Qstat,SST)
+    }
Error: object 'iterations' not found
>  
> L = apply(outer(Lstat, u ^ 2 / 2, ">"), 2, mean)
> FMC = apply(outer(Fstat, b * u ^ 2, ">"), 2, mean)
> QMC = apply(outer(Qstat, b * u ^ 2, ">"), 2, mean)
> Q = 1 - pchisq(b * u ^ 2, k - 1)
> F = 1 - pf(b * u ^ 2 , k-1, (k-1) * (b-1))
>  
> tplr = NULL
> tpnc = NULL
>   
> for (up in u) {
+   tt = TailDistrMonteCarlo(A, up, M)
+  tplr = c(tplr, tt$LR)
+  tpnc = c(tpnc, tt$NC)
+  }
> 
> rbind(FMC, F=round(F,4), QMC, Q=round(Q,4), L , LR=round(tplr,4), NC=round(tpnc,4))
      [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]  [,8]
FMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
F   0.0076 0.0020 0.0005 0.0001 0.0000 0.0000 0.0000 0e+00
QMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
Q   0.1793 0.0937 0.0440 0.0186 0.0070 0.0024 0.0007 2e-04
L      NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
LR  0.2309 0.1337 0.0711 0.0339 0.0149 0.0060 0.0022 7e-04
NC  0.2276 0.1309 0.0691 0.0327 0.0143 0.0057 0.0021 7e-04
>   
> #accuracy exp squared
> A = generateRandomMatrix(rexp2, b, k)
> 
> Fstat = NULL
> Lstat = NULL
> Qstat = NULL
>  
>   for (i in 1 : iterations) {
+     B = t(apply(A, 1, sample, size = k))
+    xx = apply(B, 2, mean)
+ SST = b * sum(xx ^ 2) 
+ SSE = sum((B-matrix(xx,b,k,byrow=TRUE))^2)
+ Fstat = c(Fstat, (SST/ (k - 1)) / (SSE / ((k - 1) * (b - 1)) ))
+ Lstat = c(Lstat, Lambda(A, xx[-k])$max)
+ Qstat = c(Qstat,SST)
+    }
Error: object 'iterations' not found
>  
> L = apply(outer(Lstat, u ^ 2 / 2, ">"), 2, mean)
> FMC = apply(outer(Fstat, b * u ^ 2, ">"), 2, mean)
> QMC = apply(outer(Qstat, b * u ^ 2, ">"), 2, mean)
> Q = 1 - pchisq(b * u ^ 2, k - 1)
> F = 1 - pf(b * u ^ 2 , k-1, (k-1) * (b-1))
>  
> tplr = NULL
> tpnc = NULL
>   
> for (up in u) {
+   tt = TailDistrMonteCarlo(A, up, M)
+  tplr = c(tplr, tt$LR)
+  tpnc = c(tpnc, tt$NC)
+  }
Error in maxNRCompute(fn = logLikAttr, fnOrig = fn, gradOrig = grad, hessOrig = hess,  : 
  NA in Hessian (at the iteration start)
Calls: TailDistrMonteCarlo ... IntOnSphereMonteCarlo -> h -> delta -> Lambda -> maxNR -> maxNRCompute
> 
> rbind(FMC, F=round(F,4), QMC, Q=round(Q,4), L , LR=round(tplr,4), NC=round(tpnc,4))
Error in round(tplr, 4) : Non-numeric argument to mathematical function
Calls: rbind
>  
> #accuracy gamma5
> A = generateRandomMatrix(rgamma5, b, k)
> 
> Fstat = NULL
> Lstat = NULL
> Qstat = NULL
>  
>   for (i in 1 : iterations) {
+     B = t(apply(A, 1, sample, size = k))
+    xx = apply(B, 2, mean)
+ SST = b * sum(xx ^ 2) 
+ SSE = sum((B-matrix(xx,b,k,byrow=TRUE))^2)
+ Fstat = c(Fstat, (SST/ (k - 1)) / (SSE / ((k - 1) * (b - 1)) ))
+ Lstat = c(Lstat, Lambda(A, xx[-k])$max)
+ Qstat = c(Qstat,SST)
+    }
Error: object 'iterations' not found
>  
> L = apply(outer(Lstat, u ^ 2 / 2, ">"), 2, mean)
> FMC = apply(outer(Fstat, b * u ^ 2, ">"), 2, mean)
> QMC = apply(outer(Qstat, b * u ^ 2, ">"), 2, mean)
> Q = 1 - pchisq(b * u ^ 2, k - 1)
> F = 1 - pf(b * u ^ 2 , k-1, (k-1) * (b-1))
>  
> tplr = NULL
> tpnc = NULL
>   
> for (up in u) {
+   tt = TailDistrMonteCarlo(A, up, M)
+  tplr = c(tplr, tt$LR)
+  tpnc = c(tpnc, tt$NC)
+  }
> 
> rbind(FMC, F=round(F,4), QMC, Q=round(Q,4), L , LR=round(tplr,4), NC=round(tpnc,4))
      [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]  [,8]
FMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
F   0.0076 0.0020 0.0005 0.0001 0.0000 0.0000 0.0000 0e+00
QMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
Q   0.1793 0.0937 0.0440 0.0186 0.0070 0.0024 0.0007 2e-04
L      NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
LR  0.2168 0.1198 0.0612 0.0284 0.0119 0.0047 0.0016 5e-04
NC  0.2150 0.1186 0.0603 0.0279 0.0116 0.0045 0.0015 5e-04
>  
> #accuracy gamma05
> A = generateRandomMatrix(rgamma05, b, k)
> 
> Fstat = NULL
> Lstat = NULL
> Qstat = NULL
>  
>   for (i in 1 : iterations) {
+     B = t(apply(A, 1, sample, size = k))
+    xx = apply(B, 2, mean)
+ SST = b * sum(xx ^ 2) 
+ SSE = sum((B-matrix(xx,b,k,byrow=TRUE))^2)
+ Fstat = c(Fstat, (SST/ (k - 1)) / (SSE / ((k - 1) * (b - 1)) ))
+ Lstat = c(Lstat, Lambda(A, xx[-k])$max)
+ Qstat = c(Qstat,SST)
+    }
Error: object 'iterations' not found
>  
> L = apply(outer(Lstat, u ^ 2 / 2, ">"), 2, mean)
> FMC = apply(outer(Fstat, b * u ^ 2, ">"), 2, mean)
> QMC = apply(outer(Qstat, b * u ^ 2, ">"), 2, mean)
> Q = 1 - pchisq(b * u ^ 2, k - 1)
> F = 1 - pf(b * u ^ 2 , k-1, (k-1) * (b-1))
>  
> tplr = NULL
> tpnc = NULL
>   
> for (up in u) {
+   tt = TailDistrMonteCarlo(A, up, M)
+  tplr = c(tplr, tt$LR)
+  tpnc = c(tpnc, tt$NC)
+  }
> 
> rbind(FMC, F=round(F,4), QMC, Q=round(Q,4), L , LR=round(tplr,4), NC=round(tpnc,4))
      [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]  [,8]
FMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
F   0.0076 0.0020 0.0005 0.0001 0.0000 0.0000 0.0000 0e+00
QMC    NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
Q   0.1793 0.0937 0.0440 0.0186 0.0070 0.0024 0.0007 2e-04
L      NaN    NaN    NaN    NaN    NaN    NaN    NaN   NaN
LR  0.2155 0.1171 0.0610 0.0283 0.0124 0.0049 0.0019 6e-04
NC  0.2138 0.1161 0.0601 0.0278 0.0120 0.0048 0.0018 6e-04
>  
> 
